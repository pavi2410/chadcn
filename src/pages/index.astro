---
import MainLayout from '@/layouts/MainLayout.astro';
import RegistryCard from '@/components/registry/RegistryCard';
import { processRegistryData } from '@/lib/registry';
import { getAllRegistries } from '@/data/registry';

// Get all registry URLs from our collection
const registryEntries = await getAllRegistries();

// Fetch data for each registry
const registriesData = await Promise.all(
  registryEntries.map(async (entry) => {
    const rawData = JSON.parse(entry.registryJsonContent);
    
    const processedData = processRegistryData(rawData);
    
    return {
      id: entry.id,
      url: entry.url,
      featured: false,
      addedAt: entry.createdAt,
      name: processedData.name || 'Unknown',
      description: processedData.description || '',
      homepage: processedData.homepage,
      items: processedData.items,
      // Extract additional properties from the registry data
      type: rawData.type,
      author: rawData.author,
      dependencies: rawData.dependencies,
      categories: rawData.categories
    };
  })
);

// Filter out any failed fetches and sort by featured status
const validRegistries = registriesData
  .filter((registry): registry is NonNullable<typeof registry> => registry !== null)
  .sort((a, b) => {
    if (a.featured && !b.featured) return -1;
    if (!a.featured && b.featured) return 1;
    return 0;
  });

const featuredRegistries = validRegistries.filter(registry => registry.featured);
---

<MainLayout title="shadcn Registry Directory">
  <section class="py-12">
    <div class="container">
      <div class="max-w-3xl space-y-4 mb-12">
        <h1 class="text-4xl font-bold">shadcn Registry Directory</h1>
        <p class="text-lg text-muted-foreground">Discover and explore shadcn UI component registries created by the community.</p>
      </div>
      
      <!-- Featured Registries -->
      {featuredRegistries.length > 0 && (
        <div class="mb-16">
          <h2 class="text-2xl font-bold mb-6">Featured Registries</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {featuredRegistries.map(registry => (
              <RegistryCard 
                client:load
                registry={{
                  id: registry.id,
                  name: registry.name,
                  description: registry.description,
                  items: registry.items || [],
                  homepage: registry.homepage,
                  featured: registry.featured,
                  type: registry.type,
                  author: registry.author,
                  dependencies: registry.dependencies,
                  categories: registry.categories
                }} 
                href={`/registry/${registry.id}`}
              />
            ))}
          </div>
        </div>
      )}
      
      <!-- All Registries -->
      <h2 class="text-2xl font-bold mb-6">All Registries</h2>
      {validRegistries.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {validRegistries.map(registry => (
            <RegistryCard 
              client:load
              registry={registry} 
              href={`/registry/${registry.id}`}
            />
          ))}
        </div>
      ) : (
        <div class="py-12 text-center">
          <p class="text-muted-foreground">No valid registries found. Please check the registry URLs and try again.</p>
        </div>
      )}
    </div>
  </section>
</MainLayout>
